input {
    file {
        start_position => "beginning"
        path => "/usr/share/logstash/input/*.log"
        stat_interval => 1
        discover_interval => 5
    }
}

filter {
    grok {
        match => { "message" => "HOSTINFO: %{WORD:hostname} %{UUID:uuid} %{TIMESTAMP_ISO8601:timestamp} %{GREEDYDATA:process_info}" }
    }
    split {
        field => "process_info"
        terminator => "PROCESSINFO: "
    }
    grok {
        match => { "process_info" => "pid: %{INT:pid} process_name: %{DATA:process_name} cpu_percent: %{NUMBER:cpu_percent} memory_usage: %{NUMBER:memory_usage}" }
    }


#    grok {
#        match => {
#            "message" => "HOSTINFO: %{WORD:hostname} %{UUID:uuid} %{TIMESTAMP_ISO8601:send_at} %{GREEDYDATA:process_info}"
#        }
#    }
#    kv {
#        source => "process_info"
#        field_split => "PROCESSINFO:"
#        value_split => " "
#        target => "processes"
#    }
#    kv {
#        source => "processes"
#    }
#    grok {
#        match => {
#            "message" => "HOSTNAME: %{WORD:hostname} HOSTID: %{HOSTNAME:host_id} TIMESTAMP:%{TIMESTAMP_ISO8601:timestamp} (PID:%{SPACE}%{NUMBER:pid}%{SPACE}NAME:%{SPACE}%{USERNAME:name}%{SPACE}CPU%{SPACE}USAGE:%{SPACE}%{NUMBER:cpu_usage}%%{SPACE}MEMORY%{SPACE}USAGE:%{SPACE}%{NUMBER:memory_usage}%{SPACE}%{WORD})+"
#        }
#    }
#    grok {
#        match => {
#            "data" => "(PID:%{SPACE}%{NUMBER:pid}%{SPACE}NAME:%{SPACE}%{USERNAME:name}%{SPACE}CPU%{SPACE}USAGE:%{SPACE}%{NUMBER:cpu_usage}%%{SPACE}MEMORY%{SPACE}USAGE:%{SPACE}%{NUMBER:memory_usage}%{SPACE}%{WORD})+"
#        }
#    }
}

output {
    elasticsearch {
        hosts => ["http://elasticsearch:9200"]
        index => "topmetrics"
      }
}